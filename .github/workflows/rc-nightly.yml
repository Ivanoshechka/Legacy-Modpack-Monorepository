name: RC Nighty Builds

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:  
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PACK_NAME: Re-Console
      OUTPUT: artifacts
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install Packwiz
      run: go install github.com/packwiz/packwiz@latest

    - name: Create short commit SHA
      id: vars
      run: |
          shortSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$shortSha" >> $GITHUB_ENV

    - name: Prepare Builds
      run: |
          mkdir RC-Modrinth-1.20.1-temp
          cp -r ./versions/vanilla/src/re-console/modrinth/fabric/1.20.1/* ./RC-Modrinth-1.20.1-temp/
          cp ./LICENSE ./RC-Modrinth-1.20.1-temp/
          cp ./README.md ./RC-Modrinth-1.20.1-temp/

          mkdir RC-Modrinth-1.21.1-temp
          cp -r ./versions/vanilla/src/re-console/modrinth/fabric/1.21.1/* ./RC-Modrinth-1.21.1-temp/
          cp ./LICENSE ./RC-Modrinth-1.21.1-temp/
          cp ./README.md ./RC-Modrinth-1.21.1-temp/

          mkdir RC-Modrinth-1.21.4-temp
          cp -r ./versions/vanilla/src/re-console/modrinth/fabric/1.21.4/* ./RC-Modrinth-1.21.4-temp/
          cp ./LICENSE ./RC-Modrinth-1.21.4-temp/
          cp ./README.md ./RC-Modrinth-1.21.4-temp/

          mkdir RC-Modrinth-1.21.5-temp
          cp -r ./versions/vanilla/src/re-console/modrinth/fabric/1.21.5/* ./RC-Modrinth-1.21.5-temp/
          cp ./LICENSE ./RC-Modrinth-1.21.5-temp/
          cp ./README.md ./RC-Modrinth-1.21.5-temp/

          mkdir RC-CurseForge-1.20.1-temp
          cp -r ./versions/vanilla/src/re-console/curseforge/fabric/1.20.1/* ./RC-CurseForge-1.20.1-temp/
          cp ./LICENSE ./RC-CurseForge-1.20.1-temp/
          cp ./README.md ./RC-CurseForge-1.20.1-temp/

          mkdir RC-CurseForge-1.21.1-temp
          cp -r ./versions/vanilla/src/re-console/curseforge/fabric/1.21.1/* ./RC-CurseForge-1.21.1-temp/
          cp ./LICENSE ./RC-CurseForge-1.21.1-temp/
          cp ./README.md ./RC-CurseForge-1.21.1-temp/

          mkdir RC-CurseForge-1.21.4-temp
          cp -r ./versions/vanilla/src/re-console/curseforge/fabric/1.21.4/* ./RC-CurseForge-1.21.4-temp/
          cp ./LICENSE ./RC-CurseForge-1.21.4-temp/
          cp ./README.md ./RC-CurseForge-1.21.4-temp/

          mkdir RC-CurseForge-1.21.5-temp
          cp -r ./versions/vanilla/src/re-console/curseforge/fabric/1.21.5/* ./RC-CurseForge-1.21.5-temp/
          cp ./LICENSE ./RC-CurseForge-1.21.5-temp/
          cp ./README.md ./RC-CurseForge-1.21.5-temp/

    - name: Create 1.20.1 build Modrinth
      run: |
          cd ./RC-Modrinth-1.20.1-temp/
          packwiz refresh
          packwiz modrinth export --output ${PACK_NAME}-1.20.1-dev-Modrinth-${{ env.COMMIT_SHORT_SHA }}.mrpack

    - name: Create 1.21.1 build Modrinth
      run: |
          cd ./RC-Modrinth-1.21.1-temp/
          packwiz refresh
          packwiz modrinth export --output ${PACK_NAME}-1.21.1-dev-Modrinth-${{ env.COMMIT_SHORT_SHA }}.mrpack

    - name: Create 1.21.4 build Modrinth
      run: |
          cd ./RC-Modrinth-1.21.4-temp/
          packwiz refresh
          packwiz modrinth export --output ${PACK_NAME}-1.21.4-dev-Modrinth-${{ env.COMMIT_SHORT_SHA }}.mrpack

    - name: Create 1.21.5 build Modrinth
      run: |
          cd ./RC-Modrinth-1.21.5-temp/
          packwiz refresh
          packwiz modrinth export --output ${PACK_NAME}-1.21.5-dev-Modrinth-${{ env.COMMIT_SHORT_SHA }}.mrpack

    - name: Create 1.20.1 build CurseForge
      run: |
          cd ./RC-CurseForge-1.20.1-temp/
          packwiz refresh
          packwiz curseforge export --output ${PACK_NAME}-1.20.1-dev-CurseForge-${{ env.COMMIT_SHORT_SHA }}.zip

    - name: Create 1.21.1 build CurseForge
      run: |
          cd ./RC-CurseForge-1.21.1-temp/
          packwiz refresh
          packwiz curseforge export --output ${PACK_NAME}-1.21.1-dev-CurseForge-${{ env.COMMIT_SHORT_SHA }}.zip

    - name: Create 1.21.4 build CurseForge
      run: |
          cd ./RC-CurseForge-1.21.4-temp/
          packwiz refresh
          packwiz curseforge export --output ${PACK_NAME}-1.21.4-dev-CurseForge-${{ env.COMMIT_SHORT_SHA }}.zip

    - name: Create 1.21.5 build CurseForge
      run: |
          cd ./RC-CurseForge-1.21.5-temp/
          packwiz refresh
          packwiz curseforge export --output ${PACK_NAME}-1.21.5-dev-CurseForge-${{ env.COMMIT_SHORT_SHA }}.zip

    - name: Prepare artifacts
      run: |
          mkdir $OUTPUT

          mv ./RC-Modrinth-1.20.1-temp/${PACK_NAME}-1.20.1-dev-Modrinth-${{ env.COMMIT_SHORT_SHA }}.mrpack ${OUTPUT}/
          mv ./RC-Modrinth-1.21.1-temp/${PACK_NAME}-1.21.1-dev-Modrinth-${{ env.COMMIT_SHORT_SHA }}.mrpack ${OUTPUT}/
          mv ./RC-Modrinth-1.21.4-temp/${PACK_NAME}-1.21.4-dev-Modrinth-${{ env.COMMIT_SHORT_SHA }}.mrpack ${OUTPUT}/
          mv ./RC-Modrinth-1.21.5-temp/${PACK_NAME}-1.21.5-dev-Modrinth-${{ env.COMMIT_SHORT_SHA }}.mrpack ${OUTPUT}/

          mv ./RC-CurseForge-1.20.1-temp/${PACK_NAME}-1.20.1-dev-CurseForge-${{ env.COMMIT_SHORT_SHA }}.zip ${OUTPUT}/
          mv ./RC-CurseForge-1.21.1-temp/${PACK_NAME}-1.21.1-dev-CurseForge-${{ env.COMMIT_SHORT_SHA }}.zip ${OUTPUT}/
          mv ./RC-CurseForge-1.21.4-temp/${PACK_NAME}-1.21.4-dev-CurseForge-${{ env.COMMIT_SHORT_SHA }}.zip ${OUTPUT}/
          mv ./RC-CurseForge-1.21.5-temp/${PACK_NAME}-1.21.5-dev-CurseForge-${{ env.COMMIT_SHORT_SHA }}.zip ${OUTPUT}/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: "Re-Console-dev-${{ env.COMMIT_SHORT_SHA }}"
        path: artifacts
